{"ast":null,"code":"// import { useState } from 'react'\n// import { useClientsContext } from \"../hooks/useClientsContext\"\n// const ClientForm = () => {\n//     const { dispatch } = useClientsContext()\n//     const [id, setId] = useState('')\n//     const [name, setName] = useState('')\n//     const [address, setAddress] = useState('')\n//     const [contact, setContact] = useState('')\n//     const [error, setError] = useState(null)\n//     const [emptyFields, setEmptyFields] = useState([])\n//     const handleSubmit = async (e) => {\n//      e.preventDefault()\n//      const client = { id, name, address, contact }\n//      const response = await fetch('/api/clients', {\n//          method: 'POST',\n//          body: JSON.stringify(client),\n//          headers: { 'Content-Type': 'application/json'\n//       }\n//      })\n//      const json = await response.json()\n//      if (!response.ok){\n//          setError(json.error)\n//          setEmptyFields(json.emptyFields || [])\n//      }\n//      if (response.ok){\n//         setName('')\n//         setId('')\n//          setAddress('')\n//          setContact('')\n//          setError(null)\n//          setEmptyFields([])\n//          console.log('Client Added',json)\n//          dispatch({type: 'ADD_CLIENT', payload: json})\n//  }\n//     }\n//     return (\n//      <form className='create' onSubmit={handleSubmit}>\n//          <h3 className='projecth'>Add a New Client</h3>\n//          <label className='lbl'>Client ID:</label>\n//          <input \n//              type=\"number\"\n//              onChange={(e) => setId(e.target.value)}\n//              value={id}\n//              className={emptyFields.includes('id') ? 'error' : ''}\n//          />\n//          <label className='lbl'>Client Name:</label>\n//          <input \n//              type=\"text\"\n//              onChange={(e) => setName(e.target.value)}\n//              value={name}\n//              className={emptyFields.includes('name') ? 'error' : ''}\n//          />\n//          <label className='lbl'>Address:</label>\n//          <input \n//              type=\"text\"\n//              onChange={(e) => setAddress(e.target.value)}\n//              value={address}\n//              className={emptyFields.includes('address') ? 'error' : ''}\n//          />\n//          < label className='lbl'>Contact:</label>\n//          <input \n//              type=\"number\"\n//              onChange={(e) => setContact(e.target.value)}\n//              value={contact}\n//              className={emptyFields.includes('contact') ? 'error' : ''}\n//          />\n//          <button>Add Project</button>\n//          {error && <div className='error'>{error}</div>}\n//      </form>\n//      )\n//  }\n//  export default ClientForm","map":{"version":3,"names":[],"sources":["C:/Users/tdasu/OneDrive/Documents/PUSL3190/PUSL3190-SolarSage-Adviser/frontend/src/Components/ClientForm.js"],"sourcesContent":["// import { useState } from 'react'\r\n// import { useClientsContext } from \"../hooks/useClientsContext\"\r\n\r\n// const ClientForm = () => {\r\n//     const { dispatch } = useClientsContext()\r\n\r\n//     const [id, setId] = useState('')\r\n//     const [name, setName] = useState('')\r\n//     const [address, setAddress] = useState('')\r\n//     const [contact, setContact] = useState('')\r\n//     const [error, setError] = useState(null)\r\n//     const [emptyFields, setEmptyFields] = useState([])\r\n\r\n \r\n//     const handleSubmit = async (e) => {\r\n//      e.preventDefault()\r\n \r\n//      const client = { id, name, address, contact }\r\n \r\n//      const response = await fetch('/api/clients', {\r\n//          method: 'POST',\r\n//          body: JSON.stringify(client),\r\n//          headers: { 'Content-Type': 'application/json'\r\n//       }\r\n//      })\r\n//      const json = await response.json()\r\n \r\n//      if (!response.ok){\r\n//          setError(json.error)\r\n//          setEmptyFields(json.emptyFields || [])\r\n//      }\r\n//      if (response.ok){\r\n//         setName('')\r\n//         setId('')\r\n//          setAddress('')\r\n//          setContact('')\r\n//          setError(null)\r\n//          setEmptyFields([])\r\n//          console.log('Client Added',json)\r\n//          dispatch({type: 'ADD_CLIENT', payload: json})\r\n//  }\r\n//     }\r\n//     return (\r\n//      <form className='create' onSubmit={handleSubmit}>\r\n//          <h3 className='projecth'>Add a New Client</h3>\r\n \r\n//          <label className='lbl'>Client ID:</label>\r\n//          <input \r\n//              type=\"number\"\r\n//              onChange={(e) => setId(e.target.value)}\r\n//              value={id}\r\n//              className={emptyFields.includes('id') ? 'error' : ''}\r\n//          />\r\n \r\n//          <label className='lbl'>Client Name:</label>\r\n//          <input \r\n//              type=\"text\"\r\n//              onChange={(e) => setName(e.target.value)}\r\n//              value={name}\r\n//              className={emptyFields.includes('name') ? 'error' : ''}\r\n//          />\r\n \r\n//          <label className='lbl'>Address:</label>\r\n//          <input \r\n//              type=\"text\"\r\n//              onChange={(e) => setAddress(e.target.value)}\r\n//              value={address}\r\n//              className={emptyFields.includes('address') ? 'error' : ''}\r\n//          />\r\n \r\n//          < label className='lbl'>Contact:</label>\r\n//          <input \r\n//              type=\"number\"\r\n//              onChange={(e) => setContact(e.target.value)}\r\n//              value={contact}\r\n//              className={emptyFields.includes('contact') ? 'error' : ''}\r\n//          />\r\n         \r\n//          <button>Add Project</button>\r\n//          {error && <div className='error'>{error}</div>}\r\n//      </form>\r\n \r\n//      )\r\n//  }\r\n \r\n//  export default ClientForm"],"mappings":"AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA"},"metadata":{},"sourceType":"module"}